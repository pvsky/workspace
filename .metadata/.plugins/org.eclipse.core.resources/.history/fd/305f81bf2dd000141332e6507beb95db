import java.util.ArrayList;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;
import java.util.SortedSet;
import java.util.TreeMap;
import java.util.TreeSet;

public class FreqAnalysis{
	private Map<Double, Character> table;
	private Map<Character, Double> freq;
	private Map<Character, Character> result;
	
	private Set<Character> characters;
	private String input;
	private String output;
	
	public FreqAnalysis(String input){
		this.input = input;
		this.output = input;
		
		freq = new TreeMap<Character, Double>();
		table = new FreqTable().getTable();
		result = new TreeMap<Character, Character>();
		
		getFreq();
		decipher();
	}
	
	private void decipher() {
		// TODO Auto-generated method stub
		
	}

	private void getFreq(){
		characters = new HashSet<Character>();
		int chars = 0;
		
		for(int i = 0; i < input.length(); i++){
			if(input.charAt(i) == ' ' || input.charAt(i) == ',' || input.charAt(i) == '.' || 
					input.charAt(i) == '(' || input.charAt(i) == ')' || input.charAt(i) == '1' || 
					input.charAt(i) == '0') {}
			else{
				if(!freq.containsKey(input.charAt(i))) {
					characters.add(input.charAt(i));
					freq.put(input.charAt(i), 1.0);
				}
				else freq.put(input.charAt(i), freq.get(i)+1);
				
				chars++;
			}	
		}

		for(Character c : characters){
			freq.put(c, freq.get(c)/chars);
		}
		
		bindFreqs();
	}
	
	private void bindFreqs() {
		// TODO Auto-generated method stub
		Set<Double> freqsEN = new TreeSet<Double>(table.keySet());

		
		for(Character c : characters){
			int i = 0;
			boolean done = false;
			
			while(!done && i< freqsEN.size()){
				if(freq.get(c) < (Double)freqsEN.toArray()[i]){
					i++;
				}
				else{
					//mozne exception pri porovnani out of bounds
					if((Double)freqsEN.toArray()[i] - freq.get(c) > freq.get(c) - (Double)freqsEN.toArray()[i+1])
						result.put(c, table.get((Double)freqsEN.toArray()[i+1]));
					else result.put(c, table.get((Double)freqsEN.toArray()[i]));
					done = true;
				}
			}
		}
	}

	public void printResult(){
		//TODO
	}
}